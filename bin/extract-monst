#! /usr/bin/perl
# vim: et sw=4

use strict;
use warnings;

use YAML;

$_ = '';

sub set {
    my ($h, $n, $v) = (\%_, @_);
    while ($n =~ s#(.*?)/##) { $h = \ %{$h->{$1}}; }

    $h->{$n} = $v;
}

sub flag_set {
    my ($prefix, $num, %renames) = @_;

    sub {
        s/^\(?([^,)]*)\)?// || die "fl $prefix $_";

        for my $tok (split /\|/, $1) {
            if ($tok =~ /${prefix}_([A-Z_]+)/) {
                set($renames{$1} || lc $1, 1);
            } elsif ($tok =~ /[1-7]/) {
                set($num || "NUM", $tok);
            } elsif ($tok =~ /0L?/) {
            } else {
                die "fl($prefix) $tok $1 $_";
            }
        }
    };
}

sub list {
    my $hdr = shift;
    my @lst = @_;

    sub {
        s/^\s*$hdr\(\s*// || die "missing $hdr";

        for my $i (0 .. $#lst) {
            $lst[$i]->();
            (s/^,\s*// || die "missing comma") if $i != $#lst;
        }

        s/^\)\s*// || die "missing closep";
    };
}

sub nest {
    my ($name, $fn) = @_;

    sub {
        my $r = \ %{ $_{$name} };
        local *_ = $r;
        $fn->();
    };
}

my %modes = qw/butt headbutt  tuch touch  stng sting  hugs crush  engl engulf
    brea breathe  expl explode  tent tentacle  weap weapon  magc magic
    none passive/;
my %types = qw/phys physical  magm magicmissile  slee sleep
    disn disintegration  elec electricity  drst poison  blnd blind
    plys paralyze  drli drain  dren drainenergy  ston petrify  stck stick
    sgld stealgold  sitm stealitem  sedu seduce  tlpt teleport  dgst digest
    were lycanthropy  drdx poisondex  drco poisoncon  drin eatbrain
    dise sickness  dcay decay  ssex succubus  halu hallucination  deth Death
    pest Pestilence  famn Famine  slim slime  ench disenchant  corr corrode
    clrc clericalspell  spel wizardspell  rbre randombreath  samu stealamulet
    curs stealintrinsic/;

sub attack {
    sub {
        if (s/^ATTK\(AT_(....), AD_(....), ([0-9]+)\s*,\s*([0-9]+)\)\s*//) {
            push @{$_{attacks}}, { mode => $modes{lc $1} || lc $1,
                type => $types{lc $2} || lc $2, damage => "${3}d${4}" };
        }
        elsif (s/^NO_ATTK\s*//) {
        }
        else {
            die "expected attack $_";
        }
    };
}

sub i {
    my ($name, %rw) = @_;
    sub {
        s/^\"?([^"),]*)\"?//;

        my $v = $1;
        $v =~ s/[A-Z]+_([A-Z_]+)/lc $1/e;
        set($name, $rw{$v} || $v);
    };
}

my $al = 'abcdefghijklmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ@X\'&;:';
my %gmap = map {$al =~ s/^(.)//; $_ => $1 } qw/ant blob cockatrice dog eye
    feline gremlin humanoid imp jelly kobold leprechaun mimic nymph orc piercer
    quadruped rodent spider trapper unicorn vortex worm xan light zruty angel
    bat centaur dragon elemental fungus gnome giant jabberwock kop lich mummy
    naga ogre pudding quantmech rustmonst snake troll umber vampire wraith xorn
    yeti zombie human ghost golem demon eel lizard/;


*parser = list(MON => i('name'), i('glyph', %gmap),
    list(LVL => i('hitdice'), i('speed'), i('ac'), i('mr'), i('alignment')),
    flag_set('G', 'rarity'),

    list(A => attack, attack, attack, attack, attack, attack),

    list(SIZ => i('weight', human => 1450, elf => 800, dragon => 4500),
        i('nutrition'), sub { s/^0|sizeof\(.*?\)//; }, # extension
        i('sound'), i('size')),

    nest('resist', flag_set('MR')), nest('corpse', flag_set('MR')),

    flag_set('M1'), flag_set('M2'), flag_set('M3'),

    i('color', qw/domestic white lord magenta zap bright_blue silver gray
        metal cyan gold yellow paper white leather brown wood brown/));

my %allmons = ();

my %blacklist = map {$_ => 1} 'Cerberus', 'beholder', 'baby shimmering dragon',
    'shimmering dragon', 'vorpal jabberwock', 'vampire mage', 'Charon',
    'long worm tail', 'Earendil', 'Elwing', 'Goblin King', 'High-elf';

sub process {
    s#/\*.*?\*/# #sg;

    # if SEDUCE is not defined, #1 is CLAW/PHYS(1d3), #3 is BITE/DRLI(2d6)
    s/SEDUCTION_ATTACKS/A(ATTK(AT_BITE, AD_SSEX, 0, 0),
        ATTK(AT_CLAW, AD_PHYS, 1, 3), ATTK(AT_CLAW, AD_PHYS, 1, 3),
        NO_ATTK, NO_ATTK, NO_ATTK)/;

    %_ = ();

    parser();

    $allmons{$_{name}} = { %_ } unless $blacklist{$_{name}};
}

while (defined (my $line = <>)) {
    if ($line =~ /^    MON\(/) {
        process if /^    MON\(/;
        $_ = '';
    }
    $_ .= $line;
}

print Dump \%allmons;
